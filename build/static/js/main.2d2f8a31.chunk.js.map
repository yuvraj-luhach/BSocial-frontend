{"version":3,"sources":["images/BSocial.png","reducers/auth.js","constants/actionTypes.js","reducers/index.js","reducers/posts.js","components/Navbar/styles.js","components/Navbar/Navbar.js","components/posts/post/styles.js","api/index.js","actions/posts.js","components/posts/post/Post.js","components/posts/styles.js","components/posts/Posts.js","components/form/styles.js","components/form/Form.js","components/styles.js","components/Pagination.jsx","components/Home/styles.js","components/Home/Home.js","actions/auth.js","components/Auth/styles.js","components/Auth/Input.js","components/Auth/Auth.js","components/PostDetails/styles.js","components/PostDetails/CommentSection.jsx","components/PostDetails/PostDetails.jsx","App.js","index.js"],"names":["module","exports","authReducer","state","authData","action","type","localStorage","setItem","JSON","stringify","data","clear","combineReducers","posts","isLoading","payload","currentPage","numberOfPages","map","post","_id","filter","auth","makeStyles","theme","appBar","borderRadius","margin","display","flexDirection","justifyContent","alignItems","padding","heading","color","textDecoration","image","marginLeft","toolbar","width","profile","userName","brandContainer","purple","palette","getContrastText","deepPurple","backgroundColor","Navbar","useState","parse","getItem","user","setUser","dispatch","useDispatch","location","useLocation","history","useHistory","classes","useStyles","logout","push","useEffect","token","decode","exp","Date","getTime","AppBar","className","position","to","src","bSocial","alt","height","Toolbar","result","Avatar","name","imageUrl","charAt","Typography","variant","Button","onClick","login","media","paddingTop","backgroundBlendMode","border","fullHeightCard","card","overlay","top","left","overlay2","right","grid","details","title","cardActions","cardAction","textAlign","API","axios","create","baseURL","interceptors","request","use","req","headers","Authorization","fetchPosts","page","get","fetchPost","id","fetchPostsBySearch","searchQuery","search","tags","updatePost","updatedPost","patch","deletePost","delete","likePost","comment","value","signIn","formData","signUp","getPost","api","console","log","getPostsBySearch","createPost","newPost","commentPost","comments","i","Post","setCurrentId","likes","setLikes","Likes","length","find","userId","fontSize","sub","hasLiked","like","handleLike","Card","raised","elevation","CardActionArea","CardMedia","selectedFile","moment","createdAt","fromNow","creator","style","size","e","stopPropagation","component","tag","gutterBottom","CardContent","message","CardActions","disabled","mainContainer","smMargin","spacing","actionDiv","Posts","useSelector","CircularProgress","Grid","container","key","item","xs","sm","md","lg","root","paper","form","flexWrap","fileInput","buttonSubmit","marginBottom","Form","currentId","p","postData","setPostData","handleSubmit","preventDefault","Paper","autoComplete","noValidate","onSubmit","TextField","label","fullWidth","onChange","target","multiline","minRows","split","multiple","onDone","base64","align","ul","Paginate","getPosts","Pagination","count","Number","renderItem","PaginationItem","Link","appBarSearch","pagination","marginTop","gridContainer","breakpoints","down","Home","query","URLSearchParams","setSearch","setTags","searchPost","join","Grow","in","Container","maxWidth","onKeyDown","keyCode","onAdd","onDelete","tagToDelete","searchButton","avatar","secondary","main","submit","googleButton","Input","handleChange","half","autoFocus","handleShowPassword","required","InputProps","endAdornment","InputAdornment","IconButton","dotenv","config","initialState","firstName","lastName","email","password","confirmPassword","SignUp","setForm","isSignup","setIsSignup","showPassword","setShowPassword","googleSuccess","res","jwt_decode","credential","error","router","signin","clientId","onSuccess","onError","alert","cookiePolicy","prevIsSignup","objectFit","maxHeight","section","flex","imageSection","recommendedPosts","loadingPaper","commentsOuterContainer","commentsInnerContainer","overflowY","marginRight","CommentSection","setComment","setComments","commentsRef","useRef","handleComment","newComments","current","scrollIntoView","behavior","c","ref","useParams","getThePost","getSimilarPosts","Divider","cursor","openPost","App","path","exact","PostDetails","Auth","store","createStore","reducers","compose","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2d2f8a31.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/BSocial.37f89f93.png\";","import * as actionType from \"../constants/actionTypes\";\r\n\r\nconst authReducer = (state = { authData: null }, action) => {\r\n  switch (action.type) {\r\n    case actionType.AUTH:\r\n      localStorage.setItem(\"profile\", JSON.stringify({ ...action?.data }));\r\n\r\n      return { ...state, authData: action.data };\r\n    case actionType.LOGOUT:\r\n      localStorage.clear();\r\n\r\n      return { ...state, authData: null };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;\r\n","export const CREATE = \"CREATE\";\r\nexport const UPDATE = \"UPDATE\";\r\nexport const DELETE = \"DELETE\";\r\nexport const FETCH_ALL = \"FETCH_ALL\";\r\nexport const LIKE = \"LIKE\";\r\nexport const COMMENT = \"COMMENT\";\r\nexport const AUTH = \"AUTH\";\r\nexport const LOGOUT = \"LOGOUT\";\r\nexport const FETCH_BY_SEARCH = \"FETCH_BY_SEARCH\";\r\nexport const FETCH_POST = \"FETCH_POST\";\r\n// to let reducers know when to start and stop loading\r\nexport const START_LOADING = \"START_LOADING\";\r\nexport const END_LOADING = \"END_LOADING\";\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport posts from \"./posts\";\r\nimport auth from \"./auth\";\r\n\r\nexport default combineReducers({ posts, auth });\r\n","import {\r\n  FETCH_ALL,\r\n  CREATE,\r\n  UPDATE,\r\n  DELETE,\r\n  LIKE,\r\n  COMMENT,\r\n  FETCH_BY_SEARCH,\r\n  FETCH_POST,\r\n  START_LOADING,\r\n  END_LOADING,\r\n} from \"../constants/actionTypes\";\r\n\r\n// in reducers the state always need to be equal to something it cannot be null\r\nexport default (state = { isLoading: true, posts: [] }, action) => {\r\n  switch (action.type) {\r\n    // fetch all the posts\r\n    // always spread the state when we work with objects\r\n    case FETCH_ALL:\r\n      return {\r\n        ...state,\r\n        posts: action.payload.data,\r\n        currentPage: action.payload.currentPage,\r\n        numberOfPages: action.payload.numberOfPages,\r\n      };\r\n    case CREATE:\r\n      return { ...state, posts: action.payload };\r\n    case UPDATE:\r\n      return {\r\n        ...state,\r\n        posts: state.posts.map((post) =>\r\n          post._id === action.payload._id ? action.payload : post\r\n        ),\r\n      };\r\n    case DELETE:\r\n      return {\r\n        ...state,\r\n        posts: state.posts.filter((post) => post._id !== action.payload),\r\n      };\r\n    case LIKE:\r\n      return {\r\n        ...state,\r\n        posts: state.posts.map((post) =>\r\n          post._id === action.payload._id ? action.payload : post\r\n        ),\r\n      };\r\n    case COMMENT:\r\n      return {\r\n        ...state,\r\n        posts: state.posts.map((post) => {\r\n          // change the post that just received a comment...\r\n          if (post._id === action.payload._id) {\r\n            return action.payload;\r\n          }\r\n          // return all the posts normally\r\n          return post;\r\n        }),\r\n      };\r\n    case FETCH_BY_SEARCH:\r\n      return { ...state, posts: action.payload };\r\n    case FETCH_POST:\r\n      return { ...state, post: action.payload };\r\n    case START_LOADING:\r\n      return { ...state, isLoading: true };\r\n    case END_LOADING:\r\n      return { ...state, isLoading: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport { deepPurple } from \"@material-ui/core/colors\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  appBar: {\r\n    borderRadius: 15,\r\n    margin: \"30px 0\",\r\n    display: \"flex\",\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    alignItems: \"center\",\r\n    padding: \"10px 50px\",\r\n  },\r\n  heading: {\r\n    color: \"rgba(0,183,255, 1)\",\r\n    textDecoration: \"none\",\r\n  },\r\n  image: {\r\n    marginLeft: \"15px\",\r\n  },\r\n  toolbar: {\r\n    display: \"flex\",\r\n    justifyContent: \"flex-end\",\r\n    width: \"400px\",\r\n  },\r\n  profile: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    width: \"400px\",\r\n  },\r\n  userName: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n  brandContainer: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n  purple: {\r\n    color: theme.palette.getContrastText(deepPurple[500]),\r\n    backgroundColor: deepPurple[500],\r\n  },\r\n}));\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { AppBar, Button, Toolbar, Typography, Avatar } from \"@material-ui/core\";\r\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\nimport decode from \"jwt-decode\";\r\n\r\nimport * as actionType from \"../../constants/actionTypes\";\r\n\r\nimport useStyles from \"./styles\";\r\n\r\nimport bSocial from \"../../images/BSocial.png\";\r\n\r\nconst Navbar = () => {\r\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem(\"profile\")));\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n\r\n  const authenticate = () => history.push(\"/auth\");\r\n\r\n  const logout = () => {\r\n    dispatch({ type: actionType.LOGOUT });\r\n\r\n    history.push(\"/posts\");\r\n\r\n    setUser(null);\r\n  };\r\n\r\n  const login = () => {\r\n    // console.log(\"auth page\");\r\n    authenticate();\r\n  };\r\n\r\n  useEffect(() => {\r\n    const token = user?.token;\r\n\r\n    // gives information when the token expires\r\n    if (token) {\r\n      const decodedToken = decode(token);\r\n\r\n      if (decodedToken.exp * 1000 < new Date().getTime()) logout();\r\n    }\r\n\r\n    setUser(JSON.parse(localStorage.getItem(\"profile\")));\r\n  }, [location]);\r\n\r\n  return (\r\n    <AppBar className={classes.appBar} position=\"static\" color=\"inherit\">\r\n      <Link to=\"/\" className={classes.brandContainer}>\r\n        {/* typography in material is for any textual element h2, p etc */}\r\n        <img className={classes.image} src={bSocial} alt=\"\" height=\"40\" />\r\n      </Link>\r\n\r\n      <Toolbar className={classes.toolbar}>\r\n        {user?.result ? (\r\n          <div className={classes.profile}>\r\n            <Avatar\r\n              className={classes.purple}\r\n              alt={user?.result.name}\r\n              src={user?.result.imageUrl}\r\n            >\r\n              {user?.result.name.charAt(0)}\r\n            </Avatar>\r\n            <Typography className={classes.userName} variant=\"h6\">\r\n              {user?.result.name}\r\n            </Typography>\r\n            <Button\r\n              className={classes.logout}\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              onClick={logout}\r\n            >\r\n              Logout\r\n            </Button>\r\n          </div>\r\n        ) : (\r\n          <Button\r\n            className={classes.login}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={login}\r\n          >\r\n            Sign In\r\n          </Button>\r\n        )}\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport default makeStyles({\r\n  media: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\",\r\n    backgroundColor: \"rgba(0, 0, 0, 0.5)\",\r\n    backgroundBlendMode: \"darken\",\r\n  },\r\n  border: {\r\n    border: \"solid\",\r\n  },\r\n  fullHeightCard: {\r\n    height: \"100%\",\r\n  },\r\n  card: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    justifyContent: \"space-between\",\r\n    borderRadius: \"15px\",\r\n    height: \"100%\",\r\n    position: \"relative\",\r\n  },\r\n  overlay: {\r\n    position: \"absolute\",\r\n    top: \"20px\",\r\n    left: \"20px\",\r\n    color: \"white\",\r\n  },\r\n  overlay2: {\r\n    position: \"absolute\",\r\n    top: \"20px\",\r\n    right: \"20px\",\r\n    color: \"white\",\r\n  },\r\n  grid: {\r\n    display: \"flex\",\r\n  },\r\n  details: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n    margin: \"20px\",\r\n  },\r\n  title: {\r\n    padding: \"0 16px\",\r\n  },\r\n  cardActions: {\r\n    padding: \"0 16px 8px 16px\",\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  cardAction: {\r\n    display: \"block\",\r\n    textAlign: \"initial\",\r\n  },\r\n});\r\n","import axios from \"axios\";\r\n\r\n// address where requests will be made , url pointing to our backend route\r\n// const url = \"http://localhost:5000/posts\";\r\n\r\n// axios instance\r\nconst API = axios.create({ baseURL: \"https://bsocial-backend.onrender.com\" });\r\n// api will now make different calls to posts, users etc\r\n\r\n// https://bsocial-api.onrender.com\r\n// https://bsocial-backend.onrender.com\r\n// this function will happen on each one of the request\r\n// adding the token to each and every request so that user functionality works properly\r\n// we send our token back to our backend and verify that we are logged in\r\nAPI.interceptors.request.use((req) => {\r\n  if (localStorage.getItem(\"profile\")) {\r\n    // sending the token\r\n    req.headers.Authorization = `Bearer ${\r\n      JSON.parse(localStorage.getItem(\"profile\")).token\r\n    }`;\r\n  }\r\n\r\n  return req;\r\n});\r\n\r\nexport const fetchPosts = (page) => API.get(`/posts?page=${page}`);\r\n\r\nexport const fetchPost = (id) => API.get(`posts/${id}`);\r\n\r\nexport const fetchPostsBySearch = (searchQuery) =>\r\n  API.get(\r\n    `/posts/search?searchQuery=${searchQuery.search || \"none\"}\r\n    &tags=${searchQuery.tags}`\r\n  );\r\n\r\nexport const createPost = (newPost) => API.post(\"/posts\", newPost);\r\nexport const updatePost = (id, updatedPost) =>\r\n  API.patch(`/posts/${id}`, updatedPost);\r\n\r\nexport const deletePost = (id) => API.delete(`/posts/${id}`);\r\nexport const likePost = (id) => API.patch(`/posts/${id}/likePost`);\r\nexport const comment = (value, id) =>\r\n  API.post(`/posts/${id}/commentPost`, { value });\r\n\r\n// api endpoints for form Submit for signin and signup\r\nexport const signIn = (formData) => API.post(\"/user/signin\", formData);\r\nexport const signUp = (formData) => API.post(\"/user/signup\", formData);\r\n","import {\r\n  FETCH_ALL,\r\n  FETCH_POST,\r\n  CREATE,\r\n  UPDATE,\r\n  DELETE,\r\n  LIKE,\r\n  COMMENT,\r\n  FETCH_BY_SEARCH,\r\n  START_LOADING,\r\n  END_LOADING,\r\n} from \"../constants/actionTypes\";\r\n\r\n// here we have to use index.js file of api folder\r\nimport * as api from \"../api\";\r\n\r\n// action creators functions that return actions\r\nexport const getPosts = (page) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: START_LOADING });\r\n    // data represents the post, fetching the post from api\r\n    const { data } = await api.fetchPosts(page);\r\n\r\n    // console.log(data);\r\n    // with redux thunk we use, success fully using redux thunk to actually pass or dispatch an action from the data from our backend\r\n    dispatch({ type: FETCH_ALL, payload: data });\r\n    dispatch({ type: END_LOADING });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getPost = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: START_LOADING });\r\n    // data represents the post, fetching the post from api\r\n    const { data } = await api.fetchPost(id);\r\n\r\n    // console.log(data);\r\n    // with redux thunk we use, success fully using redux thunk to actually pass or dispatch an action from the data from our backend\r\n    dispatch({ type: FETCH_POST, payload: data });\r\n    dispatch({ type: END_LOADING });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const getPostsBySearch = (searchQuery) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: START_LOADING });\r\n    const {\r\n      data: { data },\r\n    } = await api.fetchPostsBySearch(searchQuery);\r\n    // console.log(data);\r\n\r\n    dispatch({ type: FETCH_BY_SEARCH, payload: data });\r\n    dispatch({ type: END_LOADING });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\n// dispatch comes from redux thunk\r\nexport const createPost = (post, history) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: START_LOADING });\r\n    // data represents the post\r\n    const { data } = await api.createPost(post);\r\n\r\n    history.push(`/posts/${data._id}`);\r\n\r\n    dispatch({ type: CREATE, payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const updatePost = (id, post) => async (dispatch) => {\r\n  try {\r\n    // api request to update post\r\n    const { data } = await api.updatePost(id, post);\r\n\r\n    dispatch({ type: UPDATE, payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const deletePost = (id) => async (dispatch) => {\r\n  try {\r\n    // api request to delete post\r\n    await api.deletePost(id);\r\n\r\n    dispatch({ type: DELETE, payload: id });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const likePost = (id) => async (dispatch) => {\r\n  const user = JSON.parse(localStorage.getItem(\"profile\"));\r\n\r\n  try {\r\n    const { data } = await api.likePost(id, user?.token);\r\n\r\n    dispatch({ type: LIKE, payload: data });\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const commentPost = (value, id) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.comment(value, id);\r\n\r\n    dispatch({ type: COMMENT, payload: data });\r\n\r\n    return data.comments;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","// component for the posts\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\n// material ui import\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  Button,\r\n  Typography,\r\n  CardMedia,\r\n  CardActionArea,\r\n} from \"@material-ui/core\";\r\n\r\n// import { ButtonBase } from \"@mui/material\";\r\n\r\nimport ThumbUpAltIcon from \"@material-ui/icons/ThumbUpAlt\";\r\nimport ThumbUpAltOutlined from \"@material-ui/icons/ThumbUpAltOutlined\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\n\r\nimport moment from \"moment\";\r\n\r\nimport useStyles from \"./styles\";\r\n\r\n// importing reducers to dispatch the delete post action\r\nimport { useDispatch } from \"react-redux\";\r\nimport { deletePost, likePost } from \"../../../actions/posts\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Post = ({ post, setCurrentId }) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const user = JSON.parse(localStorage.getItem(\"profile\"));\r\n  const history = useHistory();\r\n  const [likes, setLikes] = useState(post?.likes);\r\n\r\n  // like subcomponent\r\n  const Likes = () => {\r\n    if (likes?.length > 0) {\r\n      return likes?.find((id) => id === userId) ? (\r\n        <>\r\n          <ThumbUpAltIcon fontSize=\"small\" />\r\n          &nbsp;\r\n          {likes?.length > 2\r\n            ? `You and ${likes?.length - 1} others`\r\n            : `${likes?.length} like${likes?.length > 1 ? \"s\" : \"\"}`}\r\n        </>\r\n      ) : (\r\n        <>\r\n          <ThumbUpAltOutlined fontSize=\"small\" />\r\n          &nbsp;{likes?.length} {likes?.length === 1 ? \"Like\" : \"Likes\"}\r\n        </>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <ThumbUpAltOutlined fontSize=\"small\" />\r\n        &nbsp;Like\r\n      </>\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (post) console.log(\"hello\");\r\n  }, [post]);\r\n\r\n  const openPost = () => {\r\n    history.push(`/posts/${post._id}`);\r\n  };\r\n\r\n  const userId = user?.result?.sub || user?.result?._id;\r\n  const hasLiked = post?.likes?.find((like) => like === userId);\r\n\r\n  const handleLike = async () => {\r\n    dispatch(likePost(post._id));\r\n\r\n    console.log(user);\r\n    console.log(post);\r\n    // handling the frontend part since update to the database is asynchronous and they take time\r\n    if (hasLiked) {\r\n      // console.log(post?);\r\n      setLikes(post?.likes?.filter((id) => id !== userId));\r\n    } else {\r\n      setLikes([...post?.likes, userId]);\r\n      // console.log(likes);\r\n      // console.log(post?.likes);\r\n    }\r\n  };\r\n\r\n  // tags, recommendedPosts\r\n\r\n  return (\r\n    <Card className={classes.card} raised elevation={6}>\r\n      <CardActionArea\r\n        name=\"test\"\r\n        className={classes.cardAction}\r\n        onClick={openPost}\r\n      >\r\n        <div>\r\n          {/* for image */}\r\n          <CardMedia\r\n            className={classes.media}\r\n            image={post.selectedFile}\r\n            title={post.title}\r\n          />\r\n          <div className={classes.overlay}>\r\n            <Typography variant=\"h6\">{post?.name}</Typography>\r\n            <Typography variant=\"body2\">\r\n              {moment(post.createdAt).fromNow()}\r\n            </Typography>\r\n          </div>\r\n          {(user?.result?.sub === post?.creator ||\r\n            user?.result?._id === post?.creator) && (\r\n            <div className={classes.overlay2}>\r\n              <div\r\n                style={{ color: \"white\" }}\r\n                size=\"small\"\r\n                onClick={(e) => {\r\n                  e.stopPropagation();\r\n                  setCurrentId(post._id);\r\n                }}\r\n              >\r\n                <MoreHorizIcon fontSize=\"medium\" />\r\n              </div>\r\n            </div>\r\n          )}\r\n          <div className={classes.details}>\r\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"h2\">\r\n              {post.tags.map((tag) => `#${tag} `)}\r\n            </Typography>\r\n          </div>\r\n          <Typography\r\n            className={classes.title}\r\n            variant=\"h5\"\r\n            gutterBottom\r\n            component=\"h2\"\r\n          >\r\n            {post.title}\r\n          </Typography>\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" variant=\"body2\" component=\"p\">\r\n              {post.message}\r\n            </Typography>\r\n          </CardContent>\r\n        </div>\r\n      </CardActionArea>\r\n      <CardActions className={classes.cardActions}>\r\n        <Button\r\n          size=\"small\"\r\n          color=\"primary\"\r\n          disabled={!user?.result}\r\n          onClick={handleLike}\r\n        >\r\n          <Likes />\r\n        </Button>\r\n        {(user?.result?.sub === post?.creator ||\r\n          user?.result?._id === post?.creator) && (\r\n          <Button\r\n            size=\"small\"\r\n            color=\"primary\"\r\n            onClick={() => {\r\n              dispatch(deletePost(post._id));\r\n            }}\r\n          >\r\n            <DeleteIcon fontSize=\"small\" />\r\n            Delete\r\n          </Button>\r\n        )}\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  mainContainer: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n  },\r\n  smMargin: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  actionDiv: {\r\n    textAlign: \"center\",\r\n  },\r\n}));\r\n","// component for the posts\r\nimport React from \"react\";\r\nimport { Grid, CircularProgress } from \"@material-ui/core\";\r\n\r\n// helps in fetching the data from that global redux store\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport Post from \"./post/Post\";\r\nimport useStyles from \"./styles\";\r\n\r\nconst Posts = ({ setCurrentId }) => {\r\n  // fetching the posts from our state.posts\r\n  const { posts, isLoading } = useSelector((state) => state.posts);\r\n  // before - [] of posts\r\n  // after - {posts: []}\r\n  const classes = useStyles();\r\n\r\n  // console.log(posts);\r\n\r\n  if (!posts.length && !isLoading) return \"No Posts\";\r\n\r\n  return isLoading ? (\r\n    <CircularProgress />\r\n  ) : (\r\n    <Grid\r\n      className={classes.container}\r\n      container\r\n      alignItems=\"stretch\"\r\n      spacing={3}\r\n    >\r\n      {posts.map((post) => (\r\n        <Grid key={post._id} item xs={12} sm={12} md={6} lg={3}>\r\n          <Post post={post} setCurrentId={setCurrentId} />\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Posts;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  root: {\r\n    \"& .MuiTextField-root\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  form: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n    justifyContent: \"center\",\r\n  },\r\n  fileInput: {\r\n    width: \"97%\",\r\n    margin: \"10px 0\",\r\n  },\r\n  buttonSubmit: {\r\n    marginBottom: 10,\r\n  },\r\n}));\r\n","// form component\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nimport { TextField, Button, Typography, Paper } from \"@material-ui/core\";\r\nimport FileBase from \"react-file-base64\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { createPost, updatePost } from \"../../actions/posts\";\r\nimport useStyles from \"./styles\";\r\n\r\n// GET CURRENT ID OF THE POST\r\n\r\nconst Form = ({ currentId, setCurrentId }) => {\r\n  const classes = useStyles();\r\n\r\n  // gets the user from the localStorage\r\n  const user = JSON.parse(localStorage.getItem(\"profile\"));\r\n\r\n  const post = useSelector((state) =>\r\n    currentId ? state.posts.posts.find((p) => p._id === currentId) : null\r\n  );\r\n\r\n  // this allows us to dispatch actions\r\n  const dispatch = useDispatch();\r\n\r\n  const history = useHistory();\r\n  // states\r\n  const [postData, setPostData] = useState({\r\n    title: \"\",\r\n    message: \"\",\r\n    tags: [],\r\n    // convert an image into a base 64 string in a second\r\n    selectedFile: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (post) setPostData(post);\r\n  }, [post]);\r\n\r\n  // handles submit event in the form\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // currentId idicates the post we are editing\r\n    // console.log(currentId);\r\n\r\n    if (currentId === 0) {\r\n      dispatch(createPost({ ...postData, name: user?.result?.name }, history));\r\n    } else {\r\n      dispatch(\r\n        updatePost(currentId, {\r\n          ...postData,\r\n        })\r\n      );\r\n    }\r\n    clear();\r\n  };\r\n\r\n  // clears the form\r\n  const clear = () => {\r\n    setCurrentId(0);\r\n    setPostData({\r\n      title: \"\",\r\n      message: \"\",\r\n      tags: [],\r\n      selectedFile: \"\",\r\n    });\r\n  };\r\n\r\n  // access denied to create post if user not logged in\r\n  if (!user?.result?.name) {\r\n    return (\r\n      <Paper className={classes.paper} elevation={6}>\r\n        <Typography variant=\"h6\" align=\"center\">\r\n          Please Sign In to create your own post and like other's post.\r\n        </Typography>\r\n      </Paper>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Paper className={classes.paper} elevation={6}>\r\n      {/* paper is like a div that has whitish background */}\r\n      <form\r\n        autoComplete=\"off\"\r\n        noValidate\r\n        className={`${classes.root} ${classes.form}`}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        <Typography variant=\"h6\">\r\n          {currentId ? `Editing \"${post.title}\"` : \"Creating a Post\"}\r\n        </Typography>\r\n\r\n        <TextField\r\n          name=\"title\"\r\n          variant=\"outlined\"\r\n          label=\"Title\"\r\n          fullWidth\r\n          value={postData.title}\r\n          onChange={(e) => setPostData({ ...postData, title: e.target.value })}\r\n        />\r\n        <TextField\r\n          name=\"message\"\r\n          variant=\"outlined\"\r\n          label=\"Message\"\r\n          fullWidth\r\n          multiline\r\n          minRows={4}\r\n          // whole data from the post is stored in postData object in the state , each object key is a specific text field\r\n          value={postData.message}\r\n          onChange={(e) =>\r\n            setPostData({ ...postData, message: e.target.value })\r\n          }\r\n        />\r\n        <TextField\r\n          name=\"tags\"\r\n          variant=\"outlined\"\r\n          label=\"Tags (coma separated)\"\r\n          fullWidth\r\n          value={postData.tags}\r\n          onChange={(e) =>\r\n            setPostData({ ...postData, tags: e.target.value.split(\",\") })\r\n          }\r\n        />\r\n\r\n        <div className={classes.fileInput}>\r\n          <FileBase\r\n            type=\"file\"\r\n            multiple={false}\r\n            onDone={({ base64 }) =>\r\n              setPostData({ ...postData, selectedFile: base64 })\r\n            }\r\n          />\r\n        </div>\r\n        <Button\r\n          className={classes.buttonSubmit}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          size=\"large\"\r\n          type=\"submit\"\r\n          fullWidth\r\n        >\r\n          Submit\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"secondary\"\r\n          size=\"small\"\r\n          onClick={clear}\r\n          fullWidth\r\n        >\r\n          Clear\r\n        </Button>\r\n      </form>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport default makeStyles(() => ({\r\n  ul: {\r\n    justifyContent: \"space-around\",\r\n  },\r\n}));\r\n","/* eslint-disable react/jsx-props-no-spreading */\r\nimport React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Pagination, PaginationItem } from \"@material-ui/lab\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { getPosts } from \"../actions/posts\";\r\nimport useStyles from \"./styles\";\r\n\r\nconst Paginate = ({ page }) => {\r\n  const { numberOfPages } = useSelector((state) => state.posts);\r\n  const dispatch = useDispatch();\r\n\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    if (page) {\r\n      dispatch(getPosts(page));\r\n    }\r\n  }, [dispatch, page]);\r\n\r\n  return (\r\n    <Pagination\r\n      classes={{ ul: classes.ul }}\r\n      count={numberOfPages}\r\n      page={Number(page) || 1}\r\n      variant=\"outlined\"\r\n      color=\"primary\"\r\n      renderItem={(item) => (\r\n        <PaginationItem\r\n          {...item}\r\n          component={Link}\r\n          to={`/posts?page=${item.page}`}\r\n        />\r\n      )}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Paginate;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  appBarSearch: {\r\n    borderRadius: 4,\r\n    marginBottom: \"1rem\",\r\n    display: \"flex\",\r\n    padding: \"16px\",\r\n  },\r\n  pagination: {\r\n    borderRadius: 4,\r\n    marginTop: \"1rem\",\r\n    padding: \"16px\",\r\n  },\r\n  gridContainer: {\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      flexDirection: \"column-reverse\",\r\n    },\r\n  },\r\n}));\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Container,\r\n  Grow,\r\n  Grid,\r\n  Paper,\r\n  AppBar,\r\n  TextField,\r\n  Button,\r\n} from \"@material-ui/core\";\r\n// useHistory - to know where we came from,\r\n// useLocation - to know where we are right now\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\n\r\n// chip input form tags\r\nimport ChipInput from \"material-ui-chip-input\";\r\n\r\nimport Posts from \"../posts/Posts\";\r\nimport Form from \"../form/Form\";\r\nimport Pagination from \"../Pagination\";\r\n// import a hook from react-redux, allows to dispatch and action\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { getPosts, getPostsBySearch } from \"../../actions/posts\";\r\nimport useStyles from \"./styles\";\r\n\r\nfunction useQuery() {\r\n  // to get which page we are on currently\r\n  return new URLSearchParams(useLocation().search);\r\n}\r\n\r\nconst Home = () => {\r\n  const [currentId, setCurrentId] = useState(0);\r\n\r\n  // used to add classes to every part of component individually\r\n  // calling useStyles as a hook\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  // from here we will get our page info\r\n  const query = useQuery();\r\n  const history = useHistory();\r\n  const page = query.get(\"page\") || 1;\r\n  const searchQuery = query.get(\"searchQuery\");\r\n\r\n  const [search, setSearch] = useState(\"\");\r\n  const [tags, setTags] = useState([]);\r\n  // dispatch our action inside of useEffect\r\n  // useEffect(() => {\r\n  //   dispatch(getPosts());\r\n  // }, [currentId, dispatch]);\r\n\r\n  const searchPost = () => {\r\n    if (search || tags) {\r\n      // dispatch -> fetch search post , use redux, modify our database to only search for specific posts\r\n      // create a redux action and a reducer to manage our post\r\n      dispatch(getPostsBySearch({ search, tags: tags.join(\",\") }));\r\n      history.push(\r\n        `/posts/search?searchQuery=${search || \"none\"}&tags=${tags.join(\",\")}`\r\n      );\r\n    } else {\r\n      history.push(\"/\");\r\n    }\r\n  };\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.keyCode === 13) {\r\n      // search for the post\r\n      searchPost();\r\n    }\r\n  };\r\n\r\n  const handleAdd = (tag) => setTags([...tags, tag]);\r\n\r\n  const handleDelete = (tagToDelete) =>\r\n    setTags(tags.filter((tag) => tag !== tagToDelete));\r\n\r\n  {\r\n    /* grow provides animation */\r\n  }\r\n\r\n  return (\r\n    <Grow in>\r\n      <Container maxWidth=\"xl\">\r\n        <Grid\r\n          className={classes.gridContainer}\r\n          container\r\n          justifyContent=\"space-between\"\r\n          alignItems=\"stretch\"\r\n          spacing={3}\r\n        >\r\n          {/* adding grid items */}\r\n          <Grid item xs={12} sm={6} md={9}>\r\n            {/* xs - xtra small devices */}\r\n            <Posts setCurrentId={setCurrentId} />\r\n          </Grid>\r\n          <Grid item xs={12} sm={6} md={3}>\r\n            <AppBar\r\n              className={classes.appBarSearch}\r\n              position=\"static\"\r\n              color=\"inherit\"\r\n            >\r\n              <TextField\r\n                name=\"search\"\r\n                variant=\"outlined\"\r\n                label=\"Search Post\"\r\n                fullWidth\r\n                value={search}\r\n                onKeyDown={handleKeyDown}\r\n                onChange={(e) => {\r\n                  setSearch(e.target.value);\r\n                }}\r\n              />\r\n              <ChipInput\r\n                style={{ margin: \"10px 0\" }}\r\n                value={tags}\r\n                onAdd={handleAdd}\r\n                onDelete={handleDelete}\r\n                label=\"Search Tags\"\r\n                variant=\"outlined\"\r\n              />\r\n              <Button\r\n                onClick={searchPost}\r\n                className={classes.searchButton}\r\n                color=\"primary\"\r\n                variant=\"contained\"\r\n              >\r\n                Search\r\n              </Button>\r\n            </AppBar>\r\n            <Form currentId={currentId} setCurrentId={setCurrentId} />\r\n            {!searchQuery && !tags.length && (\r\n              <Paper elevation={6} className={classes.pagination}>\r\n                <Pagination page={page} />\r\n              </Paper>\r\n            )}\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </Grow>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { AUTH } from \"../constants/actionTypes\";\r\n\r\n// here we have to use index.js file of api folder\r\nimport * as api from \"../api\";\r\n\r\n// redux flow\r\n// 1. we go to form [present in Auth.js in Auth component]\r\n// 2. once we fill all details, we dispatch an action signUp, signIn [giving formData and history]\r\n// 3. we reach actions signup, signin here in actions folder\r\n// 4. now the specific action makes another call to our api [index.js has all the api endpoints]\r\n// 5. axios makes a post request to the database, and in-turn gets a {data}\r\n// 6. then from our action creator we dispatch the action with an action type, with payload data\r\n// 7. this action reaches reducer auth.js in reducers folder\r\n// 8. where specific action type deals with the the payload in action.data\r\n\r\nexport const signin = (formData, router) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.signIn(formData);\r\n\r\n    dispatch({ type: AUTH, data });\r\n\r\n    router.push(\"/\");\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const signup = (formData, router) => async (dispatch) => {\r\n  try {\r\n    const { data } = await api.signUp(formData);\r\n\r\n    dispatch({ type: AUTH, data });\r\n\r\n    router.push(\"/\");\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(8),\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    padding: theme.spacing(2),\r\n  },\r\n  root: {\r\n    \"& .MuiTextField-root\": {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n    marginTop: theme.spacing(3),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  googleButton: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n}));\r\n","import React from \"react\";\r\nimport { TextField, Grid, InputAdornment, IconButton } from \"@material-ui/core\";\r\n\r\nimport Visibility from \"@material-ui/icons/Visibility\";\r\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\r\n\r\nconst Input = ({\r\n  // props\r\n  name,\r\n  handleChange,\r\n  label,\r\n  half,\r\n  autoFocus,\r\n  type,\r\n  handleShowPassword,\r\n}) => (\r\n  <Grid item xs={12} sm={half ? 6 : 12}>\r\n    <TextField\r\n      name={name}\r\n      onChange={handleChange}\r\n      variant=\"outlined\"\r\n      required\r\n      fullWidth\r\n      label={label}\r\n      autoFocus={autoFocus}\r\n      type={type}\r\n      // icon that we are showing on the right side of the input\r\n      InputProps={\r\n        name === \"password\"\r\n          ? {\r\n              // ************************************************\r\n              endAdornment: (\r\n                <InputAdornment position=\"end\">\r\n                  <IconButton onClick={handleShowPassword}>\r\n                    {type === \"password\" ? <Visibility /> : <VisibilityOff />}\r\n                  </IconButton>\r\n                </InputAdornment>\r\n              ),\r\n            }\r\n          : null\r\n      }\r\n    />\r\n  </Grid>\r\n);\r\n\r\nexport default Input;\r\n","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  Paper,\r\n  Grid,\r\n  Typography,\r\n  Container,\r\n} from \"@material-ui/core\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { GoogleOAuthProvider, GoogleLogin } from \"@react-oauth/google\";\r\n\r\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\r\n\r\nimport { signin, signup } from \"../../actions/auth\";\r\nimport { AUTH } from \"../../constants/actionTypes\";\r\nimport useStyles from \"./styles\";\r\nimport Input from \"./Input\";\r\nimport dotenv from \"dotenv\";\r\n\r\ndotenv.config();\r\n\r\nconst initialState = {\r\n  firstName: \"\",\r\n  lastName: \"\",\r\n  email: \"\",\r\n  password: \"\",\r\n  confirmPassword: \"\",\r\n};\r\n\r\nconst SignUp = () => {\r\n  const [form, setForm] = useState(initialState);\r\n  const [isSignup, setIsSignup] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const handleShowPassword = () => setShowPassword(!showPassword);\r\n\r\n  const switchMode = () => {\r\n    setForm(initialState);\r\n    setIsSignup((prevIsSignup) => !prevIsSignup);\r\n    setShowPassword(false);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (isSignup) {\r\n      // history is passed to the navigate once something happens\r\n      dispatch(signup(form, history));\r\n    } else {\r\n      dispatch(signin(form, history));\r\n    }\r\n  };\r\n\r\n  const googleSuccess = async (res) => {\r\n    const result = jwt_decode(res?.credential);\r\n    // ?. does not throw error if obj does not exist it throws undefined\r\n    // console.log(result);\r\n    const token = res?.credential;\r\n    // console.log(token);\r\n\r\n    try {\r\n      dispatch({ type: AUTH, data: { result, token } });\r\n      history.push(\"/\");\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const googleError = () =>\r\n    alert(\"Google Sign In was unsuccessful. Try again later\");\r\n\r\n  const handleChange = (e) =>\r\n    setForm({ ...form, [e.target.name]: e.target.value });\r\n  // change all specific properties and only change we are currently working with\r\n\r\n  return (\r\n    <Container component=\"main\" maxWidth=\"xs\">\r\n      <Paper className={classes.paper} elevation={3}>\r\n        <Avatar className={classes.avatar}>\r\n          <LockOutlinedIcon />\r\n        </Avatar>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          {isSignup ? \"Sign up\" : \"Sign in\"}\r\n        </Typography>\r\n        <form className={classes.form} onSubmit={handleSubmit}>\r\n          <Grid container spacing={2}>\r\n            {isSignup && (\r\n              <>\r\n                {/* custom component for textfield in a grid */}\r\n                <Input\r\n                  name=\"firstName\"\r\n                  label=\"First Name\"\r\n                  handleChange={handleChange}\r\n                  autoFocus\r\n                  half\r\n                />\r\n                <Input\r\n                  name=\"lastName\"\r\n                  label=\"Last Name\"\r\n                  handleChange={handleChange}\r\n                  half\r\n                />\r\n              </>\r\n            )}\r\n            <Input\r\n              name=\"email\"\r\n              label=\"Email Address\"\r\n              handleChange={handleChange}\r\n              type=\"email\"\r\n            />\r\n            <Input\r\n              name=\"password\"\r\n              label=\"Password\"\r\n              handleChange={handleChange}\r\n              type={showPassword ? \"text\" : \"password\"}\r\n              handleShowPassword={handleShowPassword}\r\n            />\r\n            {isSignup && (\r\n              <Input\r\n                name=\"confirmPassword\"\r\n                label=\"Repeat Password\"\r\n                handleChange={handleChange}\r\n                type=\"password\"\r\n              />\r\n            )}\r\n          </Grid>\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.submit}\r\n          >\r\n            {isSignup ? \"Sign Up\" : \"Sign In\"}\r\n          </Button>\r\n\r\n          <GoogleOAuthProvider clientId=\"12105498911-mb32522o6c2ip5td8v5h545tvdlis8ss.apps.googleusercontent.com\">\r\n            <GoogleLogin\r\n              // render means how we are going to show our button\r\n              onSuccess={googleSuccess}\r\n              onError={googleError}\r\n              cookiePolicy=\"single_host_origin\"\r\n              fullWidth\r\n            />\r\n          </GoogleOAuthProvider>\r\n\r\n          <Grid container justifyContent=\"flex-end\">\r\n            <Grid item>\r\n              <Button onClick={switchMode}>\r\n                {isSignup\r\n                  ? \"Already have an account? Sign in\"\r\n                  : \"Don't have an account? Sign Up\"}\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </form>\r\n      </Paper>\r\n    </Container>\r\n    // <div>Auth</div>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\nimport { width } from \"@mui/system\";\r\n\r\nexport default makeStyles((theme) => ({\r\n  media: {\r\n    borderRadius: \"20px\",\r\n    objectFit: \"cover\",\r\n    width: \"100%\",\r\n    maxHeight: \"600px\",\r\n  },\r\n  card: {\r\n    display: \"flex\",\r\n    width: \"100%\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      flexWrap: \"wrap\",\r\n      flexDirection: \"column\",\r\n    },\r\n  },\r\n  section: {\r\n    borderRadius: \"20px\",\r\n    margin: \"10px\",\r\n    flex: 1,\r\n  },\r\n  imageSection: {\r\n    marginLeft: \"20px\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      marginLeft: 0,\r\n    },\r\n  },\r\n  recommendedPosts: {\r\n    display: \"flex\",\r\n    [theme.breakpoints.down(\"sm\")]: {\r\n      flexDirection: \"column\",\r\n    },\r\n  },\r\n  loadingPaper: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    padding: \"20px\",\r\n    borderRadius: \"15px\",\r\n    height: \"39vh\",\r\n  },\r\n  commentsOuterContainer: {\r\n    display: \"flex\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  commentsInnerContainer: {\r\n    height: \"200px\",\r\n    overflowY: \"auto\",\r\n    marginRight: \"30px\",\r\n  },\r\n}));\r\n","import React, { useState, useRef } from \"react\";\r\nimport { Typography, TextField, Button } from \"@material-ui/core/\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport { commentPost } from \"../../actions/posts\";\r\nimport useStyles from \"./styles\";\r\n\r\nconst CommentSection = ({ post }) => {\r\n  const user = JSON.parse(localStorage.getItem(\"profile\"));\r\n  const [comment, setComment] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const [comments, setComments] = useState(post?.comments);\r\n  const classes = useStyles();\r\n  const commentsRef = useRef();\r\n\r\n  const handleComment = async () => {\r\n    const newComments = await dispatch(\r\n      commentPost(`${user?.result?.name}: ${comment}`, post._id)\r\n    );\r\n\r\n    setComment(\"\");\r\n    setComments(newComments);\r\n\r\n    commentsRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.commentsOuterContainer}>\r\n        <div className={classes.commentsInnerContainer}>\r\n          <Typography gutterBottom variant=\"h6\">\r\n            Comments\r\n          </Typography>\r\n          {comments?.map((c, i) => (\r\n            <Typography key={i} gutterBottom variant=\"subtitle1\">\r\n              <strong>{c.split(\": \")[0]}</strong>\r\n              {c.split(\":\")[1]}\r\n            </Typography>\r\n          ))}\r\n          {/* created an empty div below our messages  */}\r\n          {/* acts as an anchor point , scroll to this specific div as it is at the end of all the messages */}\r\n          <div ref={commentsRef} />\r\n        </div>\r\n        {user?.result?.name && (\r\n          <div style={{ width: \"70%\" }}>\r\n            <Typography gutterBottom variant=\"h6\">\r\n              Write a comment\r\n            </Typography>\r\n            <TextField\r\n              fullWidth\r\n              minRows={4}\r\n              variant=\"outlined\"\r\n              label=\"Comment\"\r\n              multiline\r\n              value={comment}\r\n              onChange={(e) => setComment(e.target.value)}\r\n            />\r\n            <br />\r\n            <Button\r\n              style={{ marginTop: \"10px\" }}\r\n              fullWidth\r\n              disabled={!comment.length}\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              onClick={handleComment}\r\n            >\r\n              Comment\r\n            </Button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CommentSection;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  Paper,\r\n  Typography,\r\n  CircularProgress,\r\n  Divider,\r\n} from \"@material-ui/core/\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport moment from \"moment\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\n\r\nimport { getPost, getPostsBySearch } from \"../../actions/posts\";\r\nimport useStyles from \"./styles\";\r\n\r\nimport CommentSection from \"./CommentSection\";\r\n\r\nconst Post = () => {\r\n  const { post, posts, isLoading } = useSelector((state) => state.posts);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    const getThePost = async () => await dispatch(getPost(id));\r\n    getThePost();\r\n  }, [id]);\r\n\r\n  useEffect(() => {\r\n    if (post) {\r\n      // console.log(id);\r\n      const getSimilarPosts = async () => {\r\n        await dispatch(\r\n          getPostsBySearch({ search: \"none\", tags: post?.tags?.join(\",\") })\r\n        );\r\n      };\r\n      // console.log(posts);\r\n      getSimilarPosts();\r\n      // console.log(posts);\r\n    }\r\n    // console.log(id);\r\n  }, [post, id]);\r\n\r\n  if (!post) return null;\r\n\r\n  const openPost = (_id) => history.push(`/posts/${_id}`);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <Paper elevation={6} className={classes.loadingPaper}>\r\n        <CircularProgress size=\"7em\" />\r\n      </Paper>\r\n    );\r\n  }\r\n\r\n  let recommendedPosts = posts.filter(({ _id }) => _id !== post._id);\r\n  if (post.tags.length === 0) recommendedPosts = [];\r\n  // console.log(recommendedPosts);\r\n  // console.log(\" recommended posts\");\r\n\r\n  return (\r\n    <Paper style={{ padding: \"20px\", borderRadius: \"15px\" }} elevation={6}>\r\n      <div className={classes.card}>\r\n        <div className={classes.section}>\r\n          <Typography variant=\"h3\" component=\"h2\">\r\n            {post.title}\r\n          </Typography>\r\n          <Typography\r\n            gutterBottom\r\n            variant=\"h6\"\r\n            color=\"textSecondary\"\r\n            component=\"h2\"\r\n          >\r\n            {post.tags.map((tag) => `#${tag} `)}\r\n          </Typography>\r\n          <Typography gutterBottom variant=\"body1\" component=\"p\">\r\n            {post.message}\r\n          </Typography>\r\n          <Typography variant=\"h6\">Created by: {post.name}</Typography>\r\n          <Typography variant=\"body1\">\r\n            {moment(post.createdAt).fromNow()}\r\n          </Typography>\r\n          <Divider style={{ margin: \"20px 0\" }} />\r\n          <CommentSection post={post} />\r\n          <Divider style={{ margin: \"20px 0\" }} />\r\n        </div>\r\n        <div className={classes.imageSection}>\r\n          <img\r\n            className={classes.media}\r\n            src={\r\n              post.selectedFile ||\r\n              \"https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png\"\r\n            }\r\n            alt={post.title}\r\n          />\r\n        </div>\r\n      </div>\r\n      {!!recommendedPosts?.length && (\r\n        <div className={classes.section}>\r\n          <Typography gutterBottom variant=\"h5\">\r\n            You might also like:\r\n          </Typography>\r\n          <Divider />\r\n          <div className={classes.recommendedPosts}>\r\n            {recommendedPosts.map(\r\n              ({ title, name, message, likes, selectedFile, _id }) => (\r\n                <div\r\n                  style={{ margin: \"20px\", cursor: \"pointer\" }}\r\n                  onClick={() => openPost(_id)}\r\n                  key={_id}\r\n                >\r\n                  <Typography gutterBottom variant=\"h6\">\r\n                    {title}\r\n                  </Typography>\r\n                  <Typography gutterBottom variant=\"subtitle2\">\r\n                    {name}\r\n                  </Typography>\r\n                  <Typography gutterBottom variant=\"subtitle2\">\r\n                    {message}\r\n                  </Typography>\r\n                  <Typography gutterBottom variant=\"subtitle1\">\r\n                    Likes: {likes.length}\r\n                  </Typography>\r\n                  <img src={selectedFile} width=\"200px\" />\r\n                </div>\r\n              )\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import React from \"react\";\r\nimport { Container } from \"@material-ui/core\";\r\n\r\n// react-router-dom\r\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\r\n\r\n// importing necessary components\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\nimport Home from \"./components/Home/Home\";\r\nimport Auth from \"./components/Auth/Auth\";\r\nimport PostDetails from \"./components/PostDetails/PostDetails.jsx\";\r\n\r\nconst App = () => {\r\n  const user = JSON.parse(localStorage.getItem(\"profile\"));\r\n\r\n  return (\r\n    // implementing react router, wrap everything in BrowserRouter\r\n    <BrowserRouter>\r\n      <Container maxWidth=\"xl\">\r\n        <Navbar />\r\n        <Switch>\r\n          <Route path=\"/\" exact component={() => <Redirect to=\"/posts\" />} />\r\n          <Route path=\"/posts\" exact component={() => <Home />} />\r\n          <Route path=\"/posts/search\" exact component={Home} />\r\n          {/* post details path */}\r\n          <Route path=\"/posts/:id\" component={PostDetails} />\r\n\r\n          <Route path=\"/auth\" exact component={() => <Auth />} />\r\n        </Switch>\r\n      </Container>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// here we connect our react application to index.html file\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\n// allows us to access that store from anywhere inside of the app [initializing redux]\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\n\r\n// importing reducers\r\nimport reducers from \"./reducers\";\r\n\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\n// used to initialize redux\r\nconst store = createStore(reducers, compose(applyMiddleware(thunk)));\r\n\r\nReactDOM.render(\r\n  // application successfully connected to redux, now we can start using it\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}